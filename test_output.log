
> cgateweb@0.0.1 test
> jest

PASS tests/throttledQueue.test.js
PASS tests/install-service.test.js
PASS tests/bufferParser.test.js
PASS tests/cgateConnection.test.js
  ● Console

    console.log
      2025-08-03T12:25:56.901Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.913Z INFO  [CgateConnection-command] command socket already exists and is not destroyed. Destroying it first.

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.913Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.914Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.915Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.916Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.917Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.918Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.918Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.919Z WARN  [CgateConnection-command] Cannot send data on command socket: not connected

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at CgateConnection.warn (src/cgateConnection.js:74:25)
      at Object.send (tests/cgateConnection.test.js:149:24)

    console.log
      2025-08-03T12:25:56.919Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.920Z ERROR [CgateConnection-command] Error writing to command socket: {"error":{}}

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log (src/logger.js:62:14)
      at CgateConnection.error [as send] (src/cgateConnection.js:83:25)
      at Object.send (tests/cgateConnection.test.js:161:24)

    console.log
      2025-08-03T12:25:56.920Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.920Z INFO  [CgateConnection-command] CONNECTED TO C-GATE COMMAND PORT: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.920Z INFO  [CgateConnection-command] C-Gate Sent: EVENT ON

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.921Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.921Z INFO  [CgateConnection-event] Connecting to C-Gate event port: localhost:20025

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.921Z INFO  [CgateConnection-command] CONNECTED TO C-GATE COMMAND PORT: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.921Z INFO  [CgateConnection-command] C-Gate Sent: EVENT ON

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.921Z INFO  [CgateConnection-event] CONNECTED TO C-GATE EVENT PORT: localhost:20025

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.922Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.922Z WARN  [CgateConnection-command] COMMAND PORT DISCONNECTED

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at CgateConnection.warn [as _handleClose] (src/cgateConnection.js:115:21)
      at EventEmitter._handleClose (src/cgateConnection.js:48:52)
      at Object.emit (tests/cgateConnection.test.js:214:28)

    console.log
      2025-08-03T12:25:56.922Z INFO  [CgateConnection-command] Scheduling command reconnection attempt 1/10 in 1000ms

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.923Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.924Z WARN  [CgateConnection-command] COMMAND PORT DISCONNECTED with error

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at CgateConnection.warn [as _handleClose] (src/cgateConnection.js:115:21)
      at EventEmitter._handleClose (src/cgateConnection.js:48:52)
      at Object.emit (tests/cgateConnection.test.js:224:28)

    console.log
      2025-08-03T12:25:56.924Z INFO  [CgateConnection-command] Scheduling command reconnection attempt 1/10 in 1000ms

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.925Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.925Z WARN  [CgateConnection-command] COMMAND PORT DISCONNECTED

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at CgateConnection.warn [as _handleClose] (src/cgateConnection.js:115:21)
      at EventEmitter._handleClose (src/cgateConnection.js:48:52)
      at Object.emit (tests/cgateConnection.test.js:233:28)

    console.log
      2025-08-03T12:25:56.926Z INFO  [CgateConnection-command] Scheduling command reconnection attempt 1/10 in 1000ms

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.926Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.926Z ERROR [CgateConnection-command] C-Gate command Socket Error: {"error":{}}

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log (src/logger.js:62:14)
      at CgateConnection.error [as _handleError] (src/cgateConnection.js:123:21)
      at EventEmitter._handleError (src/cgateConnection.js:49:47)
      at Object.emit (tests/cgateConnection.test.js:247:28)

    console.log
      2025-08-03T12:25:56.927Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.928Z INFO  [CgateConnection-command] Scheduling command reconnection attempt 1/10 in 1000ms

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.929Z ERROR [CgateConnection-command] Max reconnection attempts (2) reached for command connection. Stopping reconnection attempts.

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log (src/logger.js:62:14)
      at CgateConnection.error [as _scheduleReconnect] (src/cgateConnection.js:171:25)
      at Object._scheduleReconnect (tests/cgateConnection.test.js:293:24)

    console.log
      2025-08-03T12:25:56.930Z INFO  [CgateConnection-command] Scheduling command reconnection attempt 101/0 in 5000ms

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.930Z INFO  [CgateConnection-command] Scheduling command reconnection attempt 1/10 in 1000ms

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:57.930Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.932Z WARN  [CgateConnection-command] Cannot send data on command socket: not connected

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at CgateConnection.warn (src/cgateConnection.js:74:25)
      at send (tests/cgateConnection.test.js:342:37)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/cgateConnection.test.js:342:55)

    console.log
      2025-08-03T12:25:56.932Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.936Z INFO  [CgateConnection-command] command socket already exists and is not destroyed. Destroying it first.

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.936Z INFO  [CgateConnection-command] Connecting to C-Gate command port: localhost:20023

      at Logger.log [as _log] (src/logger.js:57:25)

PASS tests/haDiscovery.test.js
PASS tests/logger.test.js
PASS tests/settingsValidator.test.js
  ● Console

    console.log
      2025-08-03T12:25:56.866Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.876Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:43:38)

    console.error
      2025-08-03T12:25:56.876Z ERROR [SettingsValidator]   - 'mqtt' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:43:38)

    console.error
      2025-08-03T12:25:56.877Z ERROR [SettingsValidator]   - MQTT broker address is required

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:43:38)

    console.error
      2025-08-03T12:25:56.877Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:49:38)

    console.error
      2025-08-03T12:25:56.878Z ERROR [SettingsValidator]   - 'mqtt' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:49:38)

    console.error
      2025-08-03T12:25:56.879Z ERROR [SettingsValidator]   - MQTT broker address should be in format "host:port" or "mqtt://host:port"

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:49:38)

    console.error
      2025-08-03T12:25:56.882Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:55:38)

    console.error
      2025-08-03T12:25:56.882Z ERROR [SettingsValidator]   - 'mqtt' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:55:38)

    console.error
      2025-08-03T12:25:56.883Z ERROR [SettingsValidator]   - MQTT broker address is required

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:55:38)

    console.error
      2025-08-03T12:25:56.888Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:62:38)

    console.error
      2025-08-03T12:25:56.888Z ERROR [SettingsValidator]   - 'cbusname' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:62:38)

    console.error
      2025-08-03T12:25:56.889Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:68:38)

    console.error
      2025-08-03T12:25:56.889Z ERROR [SettingsValidator]   - 'cbusname' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:68:38)

    console.error
      2025-08-03T12:25:56.890Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:75:38)

    console.error
      2025-08-03T12:25:56.890Z ERROR [SettingsValidator]   - 'cbusip' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:75:38)

    console.error
      2025-08-03T12:25:56.891Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:81:38)

    console.error
      2025-08-03T12:25:56.891Z ERROR [SettingsValidator]   - 'cbusip' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:81:38)

    console.error
      2025-08-03T12:25:56.894Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:87:38)

    console.error
      2025-08-03T12:25:56.894Z ERROR [SettingsValidator]   - 'cbuscommandport' must be a positive number

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:87:38)

    console.error
      2025-08-03T12:25:56.895Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:93:38)

    console.error
      2025-08-03T12:25:56.896Z ERROR [SettingsValidator]   - 'cbuscommandport' must be a positive number

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:93:38)

    console.error
      2025-08-03T12:25:56.896Z ERROR [SettingsValidator]   - cbuscommandport must be between 1 and 65535

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:93:38)

    console.error
      2025-08-03T12:25:56.896Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:99:38)

    console.error
      2025-08-03T12:25:56.897Z ERROR [SettingsValidator]   - 'cbuscommandport' must be a positive number

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:99:38)

    console.error
      2025-08-03T12:25:56.897Z ERROR [SettingsValidator]   - cbuscommandport must be between 1 and 65535

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:99:38)

    console.error
      2025-08-03T12:25:56.900Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:105:38)

    console.error
      2025-08-03T12:25:56.901Z ERROR [SettingsValidator]   - 'messageinterval' must be a positive number

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:105:38)

    console.error
      2025-08-03T12:25:56.905Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:115:38)

    console.error
      2025-08-03T12:25:56.907Z ERROR [SettingsValidator]   - C-Gate command port and event port cannot be the same

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:115:38)

    console.error
      2025-08-03T12:25:56.909Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:121:38)

    console.error
      2025-08-03T12:25:56.913Z ERROR [SettingsValidator]   - cbuscommandport must be between 1 and 65535

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:121:38)

    console.error
      2025-08-03T12:25:56.914Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:127:38)

    console.error
      2025-08-03T12:25:56.917Z ERROR [SettingsValidator]   - 'cbuseventport' must be a positive number

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:127:38)

    console.error
      2025-08-03T12:25:56.918Z ERROR [SettingsValidator]   - cbuseventport must be between 1 and 65535

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:127:38)

    console.log
      2025-08-03T12:25:56.918Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.919Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:139:38)

    console.error
      2025-08-03T12:25:56.919Z ERROR [SettingsValidator]   - MQTT broker address should be in format "host:port" or "mqtt://host:port"

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:139:38)

    console.error
      2025-08-03T12:25:56.920Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:150:38)

    console.error
      2025-08-03T12:25:56.920Z ERROR [SettingsValidator]   - ha_discovery_prefix must be a non-empty string when HA discovery is enabled

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:150:38)

    console.error
      2025-08-03T12:25:56.920Z ERROR [SettingsValidator]   - ha_discovery_networks must be an array when specified

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:150:38)

    console.log
      2025-08-03T12:25:56.922Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.923Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.923Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.923Z WARN  [SettingsValidator] C-Gate authentication not configured - this may be required for some installations

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:139:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:184:38)

    console.warn
      2025-08-03T12:25:56.923Z WARN  [SettingsValidator] MQTT authentication not configured - ensure your MQTT broker allows anonymous connections

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:143:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:184:38)

    console.warn
      2025-08-03T12:25:56.924Z WARN  [SettingsValidator] getallnetapp not configured - device state synchronization will be limited

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:148:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:184:38)

    console.log
      2025-08-03T12:25:56.924Z INFO  [SettingsValidator] Home Assistant discovery is disabled - devices will need manual configuration

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.925Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.925Z WARN  [SettingsValidator] C-Gate authentication not configured - this may be required for some installations

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:139:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:193:38)

    console.warn
      2025-08-03T12:25:56.926Z WARN  [SettingsValidator] MQTT authentication not configured - ensure your MQTT broker allows anonymous connections

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:143:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:193:38)

    console.warn
      2025-08-03T12:25:56.927Z WARN  [SettingsValidator] getallnetapp not configured - device state synchronization will be limited

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:148:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:193:38)

    console.log
      2025-08-03T12:25:56.936Z INFO  [SettingsValidator] Home Assistant discovery is disabled - devices will need manual configuration

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.936Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.936Z INFO  [SettingsValidator] Home Assistant discovery is disabled - devices will need manual configuration

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.937Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at SettingsValidator.validate [as validateWithWarnings] (src/settingsValidator.js:124:30)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:212:38)

    console.error
      2025-08-03T12:25:56.938Z ERROR [SettingsValidator]   - 'mqtt' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at SettingsValidator.validate [as validateWithWarnings] (src/settingsValidator.js:124:30)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:212:38)

    console.error
      2025-08-03T12:25:56.938Z ERROR [SettingsValidator]   - MQTT broker address is required

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at SettingsValidator.validate [as validateWithWarnings] (src/settingsValidator.js:124:30)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:212:38)

    console.warn
      2025-08-03T12:25:56.939Z WARN  [SettingsValidator] C-Gate authentication not configured - this may be required for some installations

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:139:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:212:38)

    console.warn
      2025-08-03T12:25:56.939Z WARN  [SettingsValidator] MQTT authentication not configured - ensure your MQTT broker allows anonymous connections

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:143:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:212:38)

    console.warn
      2025-08-03T12:25:56.939Z WARN  [SettingsValidator] getallnetapp not configured - device state synchronization will be limited

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:148:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:212:38)

    console.log
      2025-08-03T12:25:56.940Z INFO  [SettingsValidator] Home Assistant discovery is disabled - devices will need manual configuration

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.941Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:223:44)

    console.error
      2025-08-03T12:25:56.941Z ERROR [SettingsValidator]   - 'mqtt' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:223:44)

    console.error
      2025-08-03T12:25:56.942Z ERROR [SettingsValidator]   - MQTT broker address is required

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:223:44)

    console.error
      2025-08-03T12:25:56.944Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:236:31)

    console.error
      2025-08-03T12:25:56.944Z ERROR [SettingsValidator]   - 'mqtt' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:236:31)

    console.error
      2025-08-03T12:25:56.944Z ERROR [SettingsValidator]   - MQTT broker address is required

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:236:31)

    console.error
      2025-08-03T12:25:56.946Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at validate (src/settingsValidator.js:163:46)
      at Object.validate (tests/settingsValidator.test.js:267:17)

    console.error
      2025-08-03T12:25:56.947Z ERROR [SettingsValidator]   - 'mqtt' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at validate (src/settingsValidator.js:163:46)
      at Object.validate (tests/settingsValidator.test.js:267:17)

    console.error
      2025-08-03T12:25:56.947Z ERROR [SettingsValidator]   - MQTT broker address is required

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at validate (src/settingsValidator.js:163:46)
      at Object.validate (tests/settingsValidator.test.js:267:17)

    console.log
      2025-08-03T12:25:56.947Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.947Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.948Z WARN  [SettingsValidator] C-Gate authentication not configured - this may be required for some installations

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:139:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at validateWithWarnings (src/settingsValidator.js:164:58)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:282:28)

    console.warn
      2025-08-03T12:25:56.948Z WARN  [SettingsValidator] MQTT authentication not configured - ensure your MQTT broker allows anonymous connections

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:143:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at validateWithWarnings (src/settingsValidator.js:164:58)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:282:28)

    console.warn
      2025-08-03T12:25:56.948Z WARN  [SettingsValidator] getallnetapp not configured - device state synchronization will be limited

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at SettingsValidator.warn [as _checkRecommendedSettings] (src/settingsValidator.js:148:25)
      at SettingsValidator._checkRecommendedSettings [as validateWithWarnings] (src/settingsValidator.js:127:14)
      at validateWithWarnings (src/settingsValidator.js:164:58)
      at Object.validateWithWarnings (tests/settingsValidator.test.js:282:28)

    console.log
      2025-08-03T12:25:56.948Z INFO  [SettingsValidator] Home Assistant discovery is disabled - devices will need manual configuration

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.948Z ERROR [SettingsValidator] Invalid configuration detected:

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at SettingsValidator.error [as validate] (src/settingsValidator.js:51:25)
      at Object.validate (tests/settingsValidator.test.js:293:44)

    console.error
      2025-08-03T12:25:56.948Z ERROR [SettingsValidator]   - 'mqtt' must be a non-empty string

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:293:44)

    console.error
      2025-08-03T12:25:56.949Z ERROR [SettingsValidator]   - MQTT broker address is required

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log [as error] (src/logger.js:62:14)
      at error (src/settingsValidator.js:52:49)
          at Array.forEach (<anonymous>)
      at SettingsValidator.forEach [as validate] (src/settingsValidator.js:52:20)
      at Object.validate (tests/settingsValidator.test.js:293:44)

PASS tests/systemUtils.test.js
PASS tests/cbusEvent.test.js
PASS tests/cbusParser.test.js
PASS tests/cbusCommand.test.js
PASS tests/mqttManager.test.js
  ● Console

    console.log
      2025-08-03T12:25:56.936Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.948Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.949Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://mqtt://example.com

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.949Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://mqtts://secure.example.com

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.950Z INFO  [MqttManager] MQTT client already exists. Disconnecting first.

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.953Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.954Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.955Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.955Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.956Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.957Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.958Z WARN  [MqttManager] Cannot publish to MQTT: not connected

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at MqttManager.warn [as publish] (src/mqttManager.js:56:25)
      at Object.publish (tests/mqttManager.test.js:156:25)

    console.log
      2025-08-03T12:25:56.958Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.959Z ERROR [MqttManager] Error publishing to MQTT: {"error":{}}

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log (src/logger.js:62:14)
      at MqttManager.error [as publish] (src/mqttManager.js:64:25)
      at Object.publish (tests/mqttManager.test.js:168:25)

    console.log
      2025-08-03T12:25:56.960Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.961Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.961Z WARN  [MqttManager] Cannot subscribe to MQTT: not connected

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at MqttManager.warn [as subscribe] (src/mqttManager.js:71:25)
      at Object.subscribe (tests/mqttManager.test.js:196:25)

    console.log
      2025-08-03T12:25:56.962Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.962Z INFO  [MqttManager] CONNECTED TO MQTT BROKER: localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.963Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.963Z INFO  [MqttManager] CONNECTED TO MQTT BROKER: localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.963Z ERROR [MqttManager] MQTT Subscription error: {"error":{}}

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log (src/logger.js:62:14)
      at error (src/mqttManager.js:121:29)
      at MqttManager.callback (tests/mqttManager.test.js:228:35)
      at MqttManager.subscribe [as _handleConnect] (src/mqttManager.js:119:14)
      at EventEmitter._handleConnect (src/mqttManager.js:37:46)
      at Object.emit (tests/mqttManager.test.js:232:28)

    console.log
      2025-08-03T12:25:56.964Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.964Z INFO  [MqttManager] CONNECTED TO MQTT BROKER: localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.964Z INFO  [MqttManager] Subscribed to MQTT topic: cbus/write/#

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.965Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.965Z WARN  [MqttManager] MQTT Client Closed. Reconnection handled by library.

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at MqttManager.warn [as _handleClose] (src/mqttManager.js:133:21)
      at EventEmitter._handleClose (src/mqttManager.js:38:44)
      at Object.emit (tests/mqttManager.test.js:261:28)

    console.log
      2025-08-03T12:25:56.966Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.967Z ERROR [MqttManager] MQTT Connection Error: Authentication failed. Please check username/password in settings.js.

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log (src/logger.js:62:14)
      at MqttManager.error [as _handleError] (src/mqttManager.js:146:25)
      at EventEmitter._handleError (src/mqttManager.js:39:47)
      at Object.emit (tests/mqttManager.test.js:283:32)

    console.error
      2025-08-03T12:25:56.968Z ERROR [MqttManager] Exiting due to fatal MQTT authentication error.

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log (src/logger.js:62:14)
      at MqttManager.error [as _handleError] (src/mqttManager.js:147:25)
      at EventEmitter._handleError (src/mqttManager.js:39:47)
      at Object.emit (tests/mqttManager.test.js:283:32)

    console.log
      2025-08-03T12:25:56.969Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.error
      2025-08-03T12:25:56.970Z ERROR [MqttManager] MQTT Client Error: {"error":{}}

      46 |         switch (level) {
      47 |             case 'error':
    > 48 |                 console.error(formattedMessage);
         |                         ^
      49 |                 break;
      50 |             case 'warn':
      51 |                 console.warn(formattedMessage);

      at Logger.error [as _log] (src/logger.js:48:25)
      at Logger._log (src/logger.js:62:14)
      at MqttManager.error [as _handleError] (src/mqttManager.js:157:25)
      at EventEmitter._handleError (src/mqttManager.js:39:47)
      at Object.emit (tests/mqttManager.test.js:300:28)

    console.log
      2025-08-03T12:25:56.971Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.971Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.972Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.972Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://example.com:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.972Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://mqtt://localhost

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.976Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://mqtts://secure.example.com

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.978Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://192.168.1.100:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.990Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.990Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.990Z INFO  [MqttManager] MQTT client already exists. Disconnecting first.

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.990Z INFO  [MqttManager] Connecting to MQTT Broker: mqtt://localhost:1883

      at Logger.log [as _log] (src/logger.js:57:25)

    console.warn
      2025-08-03T12:25:56.991Z WARN  [MqttManager] Cannot publish to MQTT: not connected

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at MqttManager.warn [as publish] (src/mqttManager.js:56:25)
      at publish (tests/mqttManager.test.js:404:38)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/mqttManager.test.js:404:70)

    console.warn
      2025-08-03T12:25:56.991Z WARN  [MqttManager] Cannot subscribe to MQTT: not connected

      49 |                 break;
      50 |             case 'warn':
    > 51 |                 console.warn(formattedMessage);
         |                         ^
      52 |                 break;
      53 |             case 'debug':
      54 |                 console.debug(formattedMessage);

      at Logger.warn (src/logger.js:51:25)
      at Logger._log (src/logger.js:66:14)
      at MqttManager.warn [as subscribe] (src/mqttManager.js:71:25)
      at subscribe (tests/mqttManager.test.js:411:38)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/mqttManager.test.js:411:61)

FAIL tests/index.test.js
  ● index.js › Settings loading › should handle missing settings.js file

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "[ERROR] Configuration file ./settings.js not found. Using default settings."

    Number of calls: 0

      75 |             require('../index.js');
      76 |             
    > 77 |             expect(mockConsoleError).toHaveBeenCalledWith(
         |                                      ^
      78 |                 '[ERROR] Configuration file ./settings.js not found. Using default settings.'
      79 |             );
      80 |             

      at Object.toHaveBeenCalledWith (tests/index.test.js:77:38)

  ● index.js › Settings loading › should handle other settings.js loading errors

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "[ERROR] Error loading ./settings.js: Syntax error in settings file. Using default settings."

    Number of calls: 0

      94 |             require('../index.js');
      95 |             
    > 96 |             expect(mockConsoleError).toHaveBeenCalledWith(
         |                                      ^
      97 |                 '[ERROR] Error loading ./settings.js: Syntax error in settings file. Using default settings.'
      98 |             );
      99 |             

      at Object.toHaveBeenCalledWith (tests/index.test.js:96:38)

  ● index.js › Settings loading › should merge user settings with defaults when available

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"cbusip": "192.168.0.22", "customProperty": "test", "logging": false, "mqtt": "custom.broker:1883"}

    Number of calls: 0

      115 |             
      116 |             // Verify bridge was created with merged settings
    > 117 |             expect(MockCgateWebBridge).toHaveBeenCalledWith(
          |                                        ^
      118 |                 expect.objectContaining({
      119 |                     mqtt: 'custom.broker:1883',
      120 |                     logging: false,

      at Object.toHaveBeenCalledWith (tests/index.test.js:117:40)

  ● index.js › main() function execution › should start application when run as main module

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "[INFO] Starting cgateweb..."

    Number of calls: 0

      143 |             require('../index.js');
      144 |             
    > 145 |             expect(mockConsoleLog).toHaveBeenCalledWith('[INFO] Starting cgateweb...');
          |                                    ^
      146 |             expect(mockConsoleLog).toHaveBeenCalledWith('[INFO] Version: 1.0.0');
      147 |             expect(mockConsoleLog).toHaveBeenCalledWith('[INFO] cgateweb started successfully');
      148 |             expect(validateWithWarnings).toHaveBeenCalled();

      at Object.toHaveBeenCalledWith (tests/index.test.js:145:36)

  ● index.js › Signal handling › should set up signal handlers

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "SIGTERM", Any<Function>

    Number of calls: 0

      176 |             require('../index.js');
      177 |             
    > 178 |             expect(processOnSpy).toHaveBeenCalledWith('SIGTERM', expect.any(Function));
          |                                  ^
      179 |             expect(processOnSpy).toHaveBeenCalledWith('SIGINT', expect.any(Function));
      180 |             expect(processOnSpy).toHaveBeenCalledWith('SIGUSR1', expect.any(Function));
      181 |             expect(processOnSpy).toHaveBeenCalledWith('uncaughtException', expect.any(Function));

      at Object.toHaveBeenCalledWith (tests/index.test.js:178:34)

  ● index.js › Signal handling › should handle SIGTERM gracefully

    TypeError: Cannot read properties of undefined (reading '1')

      187 |             
      188 |             // Get the SIGTERM handler
    > 189 |             const sigtermHandler = processOnSpy.mock.calls.find(call => call[0] === 'SIGTERM')[1];
          |                                                                                               ^
      190 |             
      191 |             sigtermHandler();
      192 |             

      at Object.<anonymous> (tests/index.test.js:189:95)

  ● index.js › Signal handling › should handle SIGINT gracefully

    TypeError: Cannot read properties of undefined (reading '1')

      200 |             
      201 |             // Get the SIGINT handler
    > 202 |             const sigintHandler = processOnSpy.mock.calls.find(call => call[0] === 'SIGINT')[1];
          |                                                                                             ^
      203 |             
      204 |             sigintHandler();
      205 |             

      at Object.<anonymous> (tests/index.test.js:202:93)

  ● index.js › Signal handling › should handle SIGUSR1 for configuration reload

    TypeError: Cannot read properties of undefined (reading '1')

      213 |             
      214 |             // Get the SIGUSR1 handler
    > 215 |             const sigusr1Handler = processOnSpy.mock.calls.find(call => call[0] === 'SIGUSR1')[1];
          |                                                                                               ^
      216 |             
      217 |             sigusr1Handler();
      218 |             

      at Object.<anonymous> (tests/index.test.js:215:95)

  ● index.js › Signal handling › should handle uncaught exceptions

    TypeError: Cannot read properties of undefined (reading '1')

      224 |             
      225 |             // Get the uncaughtException handler
    > 226 |             const exceptionHandler = processOnSpy.mock.calls.find(call => call[0] === 'uncaughtException')[1];
          |                                                                                                           ^
      227 |             const testError = new Error('Test uncaught exception');
      228 |             
      229 |             exceptionHandler(testError);

      at Object.<anonymous> (tests/index.test.js:226:107)

  ● index.js › Signal handling › should handle unhandled promise rejections

    TypeError: Cannot read properties of undefined (reading '1')

      238 |             
      239 |             // Get the unhandledRejection handler
    > 240 |             const rejectionHandler = processOnSpy.mock.calls.find(call => call[0] === 'unhandledRejection')[1];
          |                                                                                                            ^
      241 |             const testReason = 'Test rejection reason';
      242 |             const testPromise = Promise.resolve();
      243 |             

      at Object.<anonymous> (tests/index.test.js:240:108)

(node:17063) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 21 started listeners added to [EventEmitter]. MaxListeners is 20. Use emitter.setMaxListeners() to increase limit
(Use `node --trace-warnings ...` to show where the warning was created)
(node:17063) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 21 data listeners added to [EventEmitter]. MaxListeners is 20. Use emitter.setMaxListeners() to increase limit
(node:17063) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 21 allConnectionsUnhealthy listeners added to [EventEmitter]. MaxListeners is 20. Use emitter.setMaxListeners() to increase limit
FAIL tests/cgateWebBridge.test.js
  ● Console

    console.log
      2025-08-03T12:25:56.917Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.943Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.945Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.948Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.950Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.950Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.951Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.951Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.951Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.952Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.952Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.952Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.953Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.953Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.953Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.953Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.953Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.954Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.954Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.954Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.954Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.969Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.970Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.970Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.970Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.971Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.971Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.971Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.972Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.972Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.972Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.973Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.975Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.979Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.979Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

    console.log
      2025-08-03T12:25:56.980Z INFO  [SettingsValidator] Settings validation passed

      at Logger.log [as _log] (src/logger.js:57:25)

  ● CgateWebBridge › Bridge Start/Stop Operations › start() › should start all connections and log startup message

    Cannot use spyOn on a primitive value; null given

      352 |             it('should start all connections and log startup message', () => {
      353 |                 const mqttConnectSpy = jest.spyOn(bridge.mqttManager, 'connect');
    > 354 |                 const cmdConnectSpy = jest.spyOn(bridge.commandConnection, 'connect');
          |                                            ^
      355 |                 const evtConnectSpy = jest.spyOn(bridge.eventConnection, 'connect');
      356 |
      357 |                 const result = bridge.start();

      at ModuleMocker.spyOn (node_modules/jest-mock/build/index.js:719:13)
      at Object.spyOn (tests/cgateWebBridge.test.js:354:44)

  ● CgateWebBridge › Bridge Start/Stop Operations › stop() › should stop all connections and clear resources

    Cannot use spyOn on a primitive value; null given

      376 |
      377 |                 const mqttDisconnectSpy = jest.spyOn(bridge.mqttManager, 'disconnect');  
    > 378 |                 const cmdDisconnectSpy = jest.spyOn(bridge.commandConnection, 'disconnect');
          |                                               ^
      379 |                 const evtDisconnectSpy = jest.spyOn(bridge.eventConnection, 'disconnect');
      380 |                 const clearQueuesSpy = jest.spyOn(bridge.cgateCommandQueue, 'clear');
      381 |                 const clearMqttQueueSpy = jest.spyOn(bridge.mqttPublishQueue, 'clear');

      at ModuleMocker.spyOn (node_modules/jest-mock/build/index.js:719:13)
      at Object.spyOn (tests/cgateWebBridge.test.js:378:47)

  ● CgateWebBridge › Connection Management › _handleAllConnected() › should set allConnected to true when all services are connected

    TypeError: Cannot set properties of null (setting 'connected')

      425 |                 // Mock all connections as connected
      426 |                 bridge.mqttManager.connected = true;
    > 427 |                 bridge.commandConnection.connected = true;
          |                                                   ^
      428 |                 bridge.eventConnection.connected = true;
      429 |
      430 |                 bridge._handleAllConnected();

      at Object.<anonymous> (tests/cgateWebBridge.test.js:427:51)

  ● CgateWebBridge › Connection Management › _handleAllConnected() › should not set allConnected when not all services are connected

    TypeError: Cannot set properties of null (setting 'connected')

      436 |             it('should not set allConnected when not all services are connected', () => {
      437 |                 bridge.mqttManager.connected = true;
    > 438 |                 bridge.commandConnection.connected = false; // Not connected
          |                                                   ^
      439 |                 bridge.eventConnection.connected = true;
      440 |
      441 |                 bridge._handleAllConnected();

      at Object.<anonymous> (tests/cgateWebBridge.test.js:438:51)

  ● CgateWebBridge › Connection Management › _handleAllConnected() › should handle getall on start when enabled

    TypeError: Cannot set properties of null (setting 'connected')

      448 |                 bridge.settings.getallonstart = true;
      449 |                 bridge.mqttManager.connected = true;
    > 450 |                 bridge.commandConnection.connected = true;
          |                                                   ^
      451 |                 bridge.eventConnection.connected = true;
      452 |
      453 |                 const queueSpy = jest.spyOn(bridge.cgateCommandQueue, 'add');

      at Object.<anonymous> (tests/cgateWebBridge.test.js:450:51)

  ● CgateWebBridge › Connection Management › _handleAllConnected() › should set up periodic getall when enabled

    TypeError: Cannot set properties of null (setting 'connected')

      464 |                 bridge.settings.getallperiod = 5000; // 5 seconds
      465 |                 bridge.mqttManager.connected = true;
    > 466 |                 bridge.commandConnection.connected = true;
          |                                                   ^
      467 |                 bridge.eventConnection.connected = true;
      468 |
      469 |                 bridge._handleAllConnected();

      at Object.<anonymous> (tests/cgateWebBridge.test.js:466:51)

  ● CgateWebBridge › MQTT Message Handling › _handleMqttMessage() › should handle manual trigger messages

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      519 |                 bridge._handleMqttMessage('hello/cgateweb', 'trigger');
      520 |
    > 521 |                 expect(discoverySpy).toHaveBeenCalled();
          |                                      ^
      522 |                 discoverySpy.mockRestore();
      523 |             });
      524 |

      at Object.toHaveBeenCalled (tests/cgateWebBridge.test.js:521:38)

  ● CgateWebBridge › MQTT Message Handling › _handleMqttMessage() › should process valid write commands

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    - Object {
    -   "app": "56",
    -   "group": "1",
    -   "network": "254",
    -   "type": "switch",
    + CBusCommand {
    +   "_application": "56",
    +   "_commandType": "switch",
    +   "_group": "1",
    +   "_isValid": true,
    +   "_level": 255,
    +   "_logger": Logger {
    +     "component": "CBusCommand",
    +     "currentLevel": 2,
    +     "enabled": true,
    +     "level": "info",
    +     "levels": Object {
    +       "debug": 3,
    +       "error": 0,
    +       "info": 2,
    +       "warn": 1,
    +     },
    +   },
    +   "_network": "254",
    +   "_parsed": true,
    +   "_payload": "ON",
    +   "_rampTime": null,
    +   "_topic": "cbus/write/254/56/1/switch",
      },
      "cbus/write/254/56/1/switch",
      "ON",

    Number of calls: 1

      538 |                 bridge._handleMqttMessage('cbus/write/254/56/1/switch', 'ON');
      539 |
    > 540 |                 expect(processSpy).toHaveBeenCalledWith(
          |                                    ^
      541 |                     { network: '254', app: '56', group: '1', type: 'switch' },
      542 |                     'cbus/write/254/56/1/switch',
      543 |                     'ON'

      at Object.toHaveBeenCalledWith (tests/cgateWebBridge.test.js:540:36)

  ● CgateWebBridge › MQTT Message Handling › _processMqttCommand() › should handle gettree commands

    TypeError: command.getCommandType is not a function

      303 |
      304 |     _processMqttCommand(command, topic, payload) {
    > 305 |         const commandType = command.getCommandType();
          |                                     ^
      306 |         
      307 |         switch (commandType) {
      308 |             case MQTT_CMD_TYPE_GETTREE:

      at CgateWebBridge.getCommandType [as _processMqttCommand] (src/cgateWebBridge.js:305:37)
      at Object._processMqttCommand (tests/cgateWebBridge.test.js:574:24)

  ● CgateWebBridge › MQTT Message Handling › _processMqttCommand() › should handle getall commands

    TypeError: command.getCommandType is not a function

      303 |
      304 |     _processMqttCommand(command, topic, payload) {
    > 305 |         const commandType = command.getCommandType();
          |                                     ^
      306 |         
      307 |         switch (commandType) {
      308 |             case MQTT_CMD_TYPE_GETTREE:

      at CgateWebBridge.getCommandType [as _processMqttCommand] (src/cgateWebBridge.js:305:37)
      at Object._processMqttCommand (tests/cgateWebBridge.test.js:581:24)

  ● CgateWebBridge › MQTT Message Handling › _processMqttCommand() › should handle switch commands with payload

    TypeError: command.getCommandType is not a function

      303 |
      304 |     _processMqttCommand(command, topic, payload) {
    > 305 |         const commandType = command.getCommandType();
          |                                     ^
      306 |         
      307 |         switch (commandType) {
      308 |             case MQTT_CMD_TYPE_GETTREE:

      at CgateWebBridge.getCommandType [as _processMqttCommand] (src/cgateWebBridge.js:305:37)
      at Object._processMqttCommand (tests/cgateWebBridge.test.js:588:24)

  ● CgateWebBridge › MQTT Message Handling › _processMqttCommand() › should handle ramp commands

    TypeError: command.getCommandType is not a function

      303 |
      304 |     _processMqttCommand(command, topic, payload) {
    > 305 |         const commandType = command.getCommandType();
          |                                     ^
      306 |         
      307 |         switch (commandType) {
      308 |             case MQTT_CMD_TYPE_GETTREE:

      at CgateWebBridge.getCommandType [as _processMqttCommand] (src/cgateWebBridge.js:305:37)
      at Object._processMqttCommand (tests/cgateWebBridge.test.js:595:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttGetTree() › should queue tree command for network

    TypeError: command.getNetwork is not a function

      325 |     _handleMqttGetTree(command) {
      326 |         // Store network for HA discovery to know which network tree was requested
    > 327 |         this.haDiscovery.treeNetwork = command.getNetwork();
          |                                                ^
      328 |         // C-Gate TREEXML command returns XML describing all devices on the network
      329 |         this.cgateCommandQueue.add(`TREEXML ${command.getNetwork()}${NEWLINE}`);
      330 |     }

      at CgateWebBridge.getNetwork [as _handleMqttGetTree] (src/cgateWebBridge.js:327:48)
      at Object._handleMqttGetTree (tests/cgateWebBridge.test.js:616:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttGetAll() › should queue getall command for network/app

    TypeError: command.getNetwork is not a function

      332 |     _handleMqttGetAll(command) {
      333 |         // C-Gate path format: //PROJECT/network/application/* (wildcard gets all groups)
    > 334 |         const cbusPath = `//${this.settings.cbusname}/${command.getNetwork()}/${command.getApplication()}/*`;
          |                                                                 ^
      335 |         // C-Gate GET command queries current level of all devices in the application
      336 |         this.cgateCommandQueue.add(`${CGATE_CMD_GET} ${cbusPath} ${CGATE_PARAM_LEVEL}${NEWLINE}`);
      337 |     }

      at CgateWebBridge.getNetwork [as _handleMqttGetAll] (src/cgateWebBridge.js:334:65)
      at Object._handleMqttGetAll (tests/cgateWebBridge.test.js:625:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttSwitch() › should queue ON command for switch

    TypeError: command.getNetwork is not a function

      339 |     _handleMqttSwitch(command, payload) {
      340 |         // C-Gate path format: //PROJECT/network/application/group (specific device)
    > 341 |         const cbusPath = `//${this.settings.cbusname}/${command.getNetwork()}/${command.getApplication()}/${command.getGroup()}`;
          |                                                                 ^
      342 |         
      343 |         if (payload.toUpperCase() === MQTT_STATE_ON) {
      344 |             // C-Gate "on" command turns device full brightness (level 255)

      at CgateWebBridge.getNetwork [as _handleMqttSwitch] (src/cgateWebBridge.js:341:65)
      at Object._handleMqttSwitch (tests/cgateWebBridge.test.js:634:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttSwitch() › should queue OFF command for switch

    TypeError: command.getNetwork is not a function

      339 |     _handleMqttSwitch(command, payload) {
      340 |         // C-Gate path format: //PROJECT/network/application/group (specific device)
    > 341 |         const cbusPath = `//${this.settings.cbusname}/${command.getNetwork()}/${command.getApplication()}/${command.getGroup()}`;
          |                                                                 ^
      342 |         
      343 |         if (payload.toUpperCase() === MQTT_STATE_ON) {
      344 |             // C-Gate "on" command turns device full brightness (level 255)

      at CgateWebBridge.getNetwork [as _handleMqttSwitch] (src/cgateWebBridge.js:341:65)
      at Object._handleMqttSwitch (tests/cgateWebBridge.test.js:641:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttSwitch() › should queue ON command for unknown payload

    TypeError: command.getNetwork is not a function

      339 |     _handleMqttSwitch(command, payload) {
      340 |         // C-Gate path format: //PROJECT/network/application/group (specific device)
    > 341 |         const cbusPath = `//${this.settings.cbusname}/${command.getNetwork()}/${command.getApplication()}/${command.getGroup()}`;
          |                                                                 ^
      342 |         
      343 |         if (payload.toUpperCase() === MQTT_STATE_ON) {
      344 |             // C-Gate "on" command turns device full brightness (level 255)

      at CgateWebBridge.getNetwork [as _handleMqttSwitch] (src/cgateWebBridge.js:341:65)
      at Object._handleMqttSwitch (tests/cgateWebBridge.test.js:648:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttRamp() › should handle numeric level ramp

    TypeError: command.getGroup is not a function

      353 |
      354 |     _handleMqttRamp(command, payload, topic) {
    > 355 |         if (!command.getGroup()) {
          |                      ^
      356 |             this.warn(`${WARN_PREFIX} Ramp command requires device ID on topic ${topic}`);
      357 |             return;
      358 |         }

      at CgateWebBridge.getGroup [as _handleMqttRamp] (src/cgateWebBridge.js:355:22)
      at Object._handleMqttRamp (tests/cgateWebBridge.test.js:657:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttRamp() › should handle INCREASE command

    TypeError: command.getGroup is not a function

      353 |
      354 |     _handleMqttRamp(command, payload, topic) {
    > 355 |         if (!command.getGroup()) {
          |                      ^
      356 |             this.warn(`${WARN_PREFIX} Ramp command requires device ID on topic ${topic}`);
      357 |             return;
      358 |         }

      at CgateWebBridge.getGroup [as _handleMqttRamp] (src/cgateWebBridge.js:355:22)
      at Object._handleMqttRamp (tests/cgateWebBridge.test.js:666:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttRamp() › should handle DECREASE command

    TypeError: command.getGroup is not a function

      353 |
      354 |     _handleMqttRamp(command, payload, topic) {
    > 355 |         if (!command.getGroup()) {
          |                      ^
      356 |             this.warn(`${WARN_PREFIX} Ramp command requires device ID on topic ${topic}`);
      357 |             return;
      358 |         }

      at CgateWebBridge.getGroup [as _handleMqttRamp] (src/cgateWebBridge.js:355:22)
      at Object._handleMqttRamp (tests/cgateWebBridge.test.js:676:24)

  ● CgateWebBridge › MQTT Command Handlers › _handleMqttRamp() › should handle ramp with time specification

    TypeError: command.getGroup is not a function

      353 |
      354 |     _handleMqttRamp(command, payload, topic) {
    > 355 |         if (!command.getGroup()) {
          |                      ^
      356 |             this.warn(`${WARN_PREFIX} Ramp command requires device ID on topic ${topic}`);
      357 |             return;
      358 |         }

      at CgateWebBridge.getGroup [as _handleMqttRamp] (src/cgateWebBridge.js:355:22)
      at Object._handleMqttRamp (tests/cgateWebBridge.test.js:684:24)

  ● CgateWebBridge › C-Gate Response Processing › _parseCommandResponseLine() › should parse successful responses

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "200", "Command successful"

    Number of calls: 0

      749 |                 bridge._parseCommandResponseLine('200-Command successful');
      750 |                 
    > 751 |                 expect(processSpy).toHaveBeenCalledWith('200', 'Command successful');
          |                                    ^
      752 |                 processSpy.mockRestore();
      753 |             });
      754 |

      at Object.toHaveBeenCalledWith (tests/cgateWebBridge.test.js:751:36)

  ● CgateWebBridge › C-Gate Response Processing › _parseCommandResponseLine() › should parse error responses

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "400", "Bad request error"

    Number of calls: 0

      758 |                 bridge._parseCommandResponseLine('400-Bad request error');
      759 |                 
    > 760 |                 expect(processSpy).toHaveBeenCalledWith('400', 'Bad request error');
          |                                    ^
      761 |                 processSpy.mockRestore();
      762 |             });
      763 |

      at Object.toHaveBeenCalledWith (tests/cgateWebBridge.test.js:760:36)

  ● CgateWebBridge › C-Gate Response Processing › _parseCommandResponseLine() › should handle responses without status data

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "200", ""

    Number of calls: 0

      767 |                 bridge._parseCommandResponseLine('200-');
      768 |                 
    > 769 |                 expect(processSpy).toHaveBeenCalledWith('200', '');
          |                                    ^
      770 |                 processSpy.mockRestore();
      771 |             });
      772 |

      at Object.toHaveBeenCalledWith (tests/cgateWebBridge.test.js:769:36)

  ● CgateWebBridge › C-Gate Response Processing › _processCommandResponse() › should process object status responses

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Object status data"

    Number of calls: 0

      787 |                 bridge._processCommandResponse('200', 'Object status data');
      788 |                 
    > 789 |                 expect(objectStatusSpy).toHaveBeenCalledWith('Object status data');
          |                                         ^
      790 |                 objectStatusSpy.mockRestore();
      791 |             });
      792 |

      at Object.toHaveBeenCalledWith (tests/cgateWebBridge.test.js:789:41)

  ● CgateWebBridge › C-Gate Response Processing › _processCommandResponse() › should process tree start responses

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Tree start"

    Number of calls: 0

      798 |                 bridge._processCommandResponse('300', 'Tree start');
      799 |                 
    > 800 |                 expect(treeStartSpy).toHaveBeenCalledWith('Tree start');
          |                                      ^
      801 |                 treeStartSpy.mockRestore();
      802 |             });
      803 |

      at Object.toHaveBeenCalledWith (tests/cgateWebBridge.test.js:800:38)

  ● CgateWebBridge › C-Gate Response Processing › _processCommandResponse() › should process tree data responses

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Tree data content"

    Number of calls: 0

      809 |                 bridge._processCommandResponse('301', 'Tree data content');
      810 |                 
    > 811 |                 expect(treeDataSpy).toHaveBeenCalledWith('Tree data content');
          |                                     ^
      812 |                 treeDataSpy.mockRestore();
      813 |             });
      814 |

      at Object.toHaveBeenCalledWith (tests/cgateWebBridge.test.js:811:37)

  ● CgateWebBridge › C-Gate Response Processing › _processCommandResponse() › should process tree end responses

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      820 |                 bridge._processCommandResponse('399', 'Tree end');
      821 |                 
    > 822 |                 expect(treeEndSpy).toHaveBeenCalled();
          |                                    ^
      823 |                 treeEndSpy.mockRestore();
      824 |             });
      825 |

      at Object.toHaveBeenCalled (tests/cgateWebBridge.test.js:822:36)

  ● CgateWebBridge › C-Gate Response Processing › _processCommandObjectStatus() › should publish object status to MQTT

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"options": {"qos": 0}, "payload": "75", "topic": "cbus/read/254/56/1/level"}
    Received
           1
              Object {
                "options": Object {
                  "qos": 0,
                },
            -   "payload": "75",
            -   "topic": "cbus/read/254/56/1/level",
            +   "payload": "ON",
            +   "topic": "cbus/read/254/56/1/state",
              },
           2
              Object {
                "options": Object {
                  "qos": 0,
                },
            -   "payload": "75",
            +   "payload": "29",
                "topic": "cbus/read/254/56/1/level",
              },

    Number of calls: 2

      840 |                 bridge._processCommandObjectStatus(statusData);
      841 |                 
    > 842 |                 expect(publishSpy).toHaveBeenCalledWith({
          |                                    ^
      843 |                     topic: 'cbus/read/254/56/1/level',
      844 |                     payload: '75',
      845 |                     options: { qos: 0 }

      at Object.toHaveBeenCalledWith (tests/cgateWebBridge.test.js:842:36)

  ● CgateWebBridge › Event Processing › _publishEvent() › should publish lighting events to MQTT

    TypeError: event.isValid is not a function

      578 |      */
      579 |     _publishEvent(event, source = '') {
    > 580 |         if (!event || !event.isValid()) {
          |                              ^
      581 |             return;
      582 |         }
      583 |

      at CgateWebBridge.isValid [as _publishEvent] (src/cgateWebBridge.js:580:30)
      at Object._publishEvent (tests/cgateWebBridge.test.js:905:24)

  ● CgateWebBridge › Event Processing › _publishEvent() › should publish PIR sensor events differently

    TypeError: event.isValid is not a function

      578 |      */
      579 |     _publishEvent(event, source = '') {
    > 580 |         if (!event || !event.isValid()) {
          |                              ^
      581 |             return;
      582 |         }
      583 |

      at CgateWebBridge.isValid [as _publishEvent] (src/cgateWebBridge.js:580:30)
      at Object._publishEvent (tests/cgateWebBridge.test.js:923:24)

  ● CgateWebBridge › Event Processing › _emitLevelFromEvent() › should not emit when level is null

    TypeError: event.getApplication is not a function

      540 |     _emitLevelFromEvent(event) {
      541 |         // PIR sensors only send state (motion detected/cleared), not brightness levels
    > 542 |         if (event.getApplication() === this.settings.ha_discovery_pir_app_id) {
          |                   ^
      543 |             return;
      544 |         }
      545 |         

      at CgateWebBridge.getApplication [as _emitLevelFromEvent] (src/cgateWebBridge.js:542:19)
      at Object._emitLevelFromEvent (tests/cgateWebBridge.test.js:955:24)

